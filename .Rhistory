cor(knn2)
cor(knn)
format(knn)
format(knn1)
nrow(knn[knn$Light == 0 & knn$Occupancy == 0,]) ## Total count when there is 0 Occupancy compared to 'Light' (5160)
?numieric
?numeric
is.numeric(knn1$Date)
is.numeric(knn1$Humidity)
is.numeric(knn1$Light)
View(knn)
nrow(knn[knn$Light == 0 & knn$Occupancy == 0,]) ## Total count when there is 0 Occupancy compared to 'Light' (5160)
knn %>% count(Light) ## Amount of total '0 values' in column 'Light' (5160)
colnames(cdf)
names(cdf)[1] <- "Date"
names(cdf)[2] <- "Temperature"
names(cdf)[3] <- "Humidity"
names(cdf)[4] <- "Light"
names(cdf)[5] <- "CO2"
names(cdf)[6] <- "Humidity_Ratio"
names(cdf)[7] <- "Occupancy"
head(cdf)
View(knn)
knn$Date <- as.numeric(knn$Date)
knn$Temperature <- as.numeric(knn$Temperature)
knn$Humidity <- as.numeric(knn$Humidity)
knn$Light <- as.numeric(knn$Light)
knn$Date <- as.numeric(knn$Date)
knn$Temperature <- as.numeric(knn$Temperature)
knn$Humidity <- as.numeric(knn$Humidity)
knn$Light <- as.numeric(knn$Light)
knn$CO2 <- as.numeric(knn$CO2)
knn$Humidity_Ratio <- as.numeric(knn$Humidity_Ratio)
knn$Occupancy <- as.numeric(knn$Occupancy)
View(knn)
knn$Date <- character(knn$Date)
knn$Date <- as.character(knn$Date)
knn$Temperature <- as.numeric(knn$Temperature)
knn$Humidity <- as.numeric(knn$Humidity)
knn$Light <- as.numeric(knn$Light)
knn$CO2 <- as.numeric(knn$CO2)
knn$Humidity_Ratio <- as.numeric(knn$Humidity_Ratio)
knn$Occupancy <- as.numeric(knn$Occupancy)
View(knn1)
View(knn)
knn$Temperature <- as.numeric(knn$Temperature)
knn$Humidity <- as.numeric(knn$Humidity)
knn$Light <- as.numeric(knn$Light)
knn$CO2 <- as.numeric(knn$CO2)
knn$Humidity_Ratio <- as.numeric(knn$Humidity_Ratio)
knn$Occupancy <- as.numeric(knn$Occupancy)
knn <- cdf[-1,]
head(knn)
format(knn)
is.numeric(knn1$Humidity)
is.numeric(knn$Humidity)
View(knn)
knn$Temperature <- as.numeric(knn$Temperature)
knn$Humidity <- as.numeric(knn$Humidity)
knn$Light <- as.numeric(knn$Light)
knn$CO2 <- as.numeric(knn$CO2)
knn$Humidity_Ratio <- as.numeric(knn$Humidity_Ratio)
knn$Occupancy <- as.numeric(knn$Occupancy)
knn$Temperature <- as.numeric(knn$Temperature)
knn$Humidity <- as.numeric(knn$Humidity)
knn$Light <- as.numeric(knn$Light)
knn$CO2 <- as.numeric(knn$CO2)
knn$Humidity_Ratio <- as.numeric(knn$Humidity_Ratio)
knn$Occupancy <- as.numeric(knn$Occupancy) %>% knn <- cdf[-1,]
knn$Temperature <- as.numeric(knn$Temperature)
knn$Humidity <- as.numeric(knn$Humidity)
knn$Light <- as.numeric(knn$Light)
knn$CO2 <- as.numeric(knn$CO2)
knn$Humidity_Ratio <- as.numeric(knn$Humidity_Ratio)
knn$Occupancy <- as.numeric(knn$Occupancy) %>% knn <- knn[-1,]
knn$Temperature <- as.numeric(knn$Temperature)
knn$Humidity <- as.numeric(knn$Humidity)
knn$Light <- as.numeric(knn$Light)
knn$CO2 <- as.numeric(knn$CO2)
knn$Humidity_Ratio <- as.numeric(knn$Humidity_Ratio)
knn$Occupancy <- as.numeric(knn$Occupancy)
knn <- knn[-1,]
head(knn)
knn$Temperature <- as.numeric(knn$Temperature)
knn$Humidity <- as.numeric(knn$Humidity)
knn$Light <- as.numeric(knn$Light)
knn$CO2 <- as.numeric(knn$CO2)
knn$Humidity_Ratio <- as.numeric(knn$Humidity_Ratio)
knn$Occupancy <- as.numeric(knn$Occupancy)
knn = select(knn, -1)
knn$Temperature <- as.numeric(knn$Temperature)
knn$Humidity <- as.numeric(knn$Humidity)
knn$Light <- as.numeric(knn$Light)
knn$CO2 <- as.numeric(knn$CO2)
knn$Humidity_Ratio <- as.numeric(knn$Humidity_Ratio)
knn$Occupancy <- as.numeric(knn$Occupancy)
knn = select(knn, -1)
head(knn)
knn$Temperature <- as.numeric(knn$Temperature)
knn1$Temperature <- as.numeric(knn$Temperature)
knn %>% count(Light) ## Amount of total '0 values' in column 'Light' (5160)
knn$Temperature <- as.numeric(knn$Temperature)
knn$Temperature <- as.numeric(knn$Temperature)
head(knn)
format(knn)
View(knn)
corrplot(cor(knn(, method = "circle")))
cor(knn)
install.packages("ggcorrplot")
library(ggcorrplot)
install.packages("ggcorrplot")
?corrplot
library("ggcorrplot")
install.packages("ggcplot")
library("grplot")
library("ggplot")
install.packages("ggcplot")
library("ggplot")
install.packages("ggplot")
library("ggplot")
install.packages("corrplot")
library("corrplot")
ggcorrplot(cor(knn), method = "circle")
ggcorrplot(cor(knn), method = "number")
ggcorrplot(cor(knn), method = "circle")
head(knn)
format(knn)
knn <- cdf[-1,]
head(knn)
ggcorrplot(cor(knn), method = "circle")
knn$Temperature <- as.numeric(knn$Temperature)
knn$Humidity <- as.numeric(knn$Humidity)
knn$Light <- as.numeric(knn$Light)
knn$CO2 <- as.numeric(knn$CO2)
knn$Humidity_Ratio <- as.numeric(knn$Humidity_Ratio)
knn$Occupancy <- as.numeric(knn$Occupancy)
head(knn)
format(knn)
ggcorrplot(cor(knn), method = "circle")
knn$Temperature <- as.numeric(knn$Temperature)
knn$Humidity <- as.numeric(knn$Humidity)
knn$Light <- as.numeric(knn$Light)
knn$CO2 <- as.numeric(knn$CO2)
knn$Humidity_Ratio <- as.numeric(knn$Humidity_Ratio)
knn$Occupancy <- as.numeric(knn$Occupancy)
format(knn)
nrow(knn[knn$Light == 0 & knn$Occupancy == 0,]) ## Total count when there is 0 Occupancy compared to 'Light' (5160)
knn %>% count(Light) ## Amount of total '0 values' in column 'Light' (5160)
knn <- cdf[-1,]
head(knn)
knn <- cdf[-2,]
head(knn)
knn <- cdf[-1,]
head(knn)
knn$Temperature <- as.numeric(knn$Temperature)
knn$Humidity <- as.numeric(knn$Humidity)
knn$Light <- as.numeric(knn$Light)
knn$CO2 <- as.numeric(knn$CO2)
knn$Humidity_Ratio <- as.numeric(knn$Humidity_Ratio)
knn$Occupancy <- as.numeric(knn$Occupancy)
head(knn)
format(knn)
knn3 <-  select(knn, -1)
library(dbplyr)
knn3 <- select(knn, -1)
library(dplyr)
knn3 <- select(knn, -1)
head(knn3)
format(knn3)
ggcorrplot(cor(knn3), method = "circle")
knn1 <- knn %>% filter(Light > 0) ## Deleting all 0 values within the column 'Light' since no occupation is there if there's no Light
head(knn1) %>% view(knn1) ## To see if the codeline worked (It worked)
knn1 %>% count(Light) ## Amount of total '0' values in column 'Light'
## It worked
ggcorrplot(cor(knn3)
ggcorrplot(cor(knn3), method = "square")
ggcorrplot(cor(knn3), method = "square", hc.order = TRUE)
install.packages("XML")
install.packages("rvest")
install.packages("GGally")
library(tidyverse)
library(XML)
library(rvest)
library(GGally)
install.packages("corrplot")
library("corrplot")
rdf3 <- as.data.frame(read_html("https://github.com/HAN-M3DM-Data-Mining/data-mining-s1y2223-DannyBannink/blob/master/datasets/KNN-occupancy.csv") %>% html_table(fill=TRUE))
print(rdf3) # Look at the results of the gained data
cdf <- rdf3[,colSums(is.na(rdf3))<nrow(rdf3)] # Removing first column since it doesn't add any value.
print(cdf) # Look at the new table to test if the codeline works.
colnames(cdf)
names(cdf)[1] <- "Date"
names(cdf)[2] <- "Temperature"
names(cdf)[3] <- "Humidity"
names(cdf)[4] <- "Light"
names(cdf)[5] <- "CO2"
names(cdf)[6] <- "Humidity_Ratio"
names(cdf)[7] <- "Occupancy"
head(cdf)
knn <- cdf[-1,]
head(knn)
nrow(knn[knn$Light == 0 & knn$Occupancy == 0,]) ## Total count when there is 0 Occupancy compared to 'Light' (5160)
knn %>% count(Light) ## Amount of total '0 values' in column 'Light' (5160)
knn$Temperature <- as.numeric(knn$Temperature)
knn$Humidity <- as.numeric(knn$Humidity)
knn$Light <- as.numeric(knn$Light)
knn$CO2 <- as.numeric(knn$CO2)
knn$Humidity_Ratio <- as.numeric(knn$Humidity_Ratio)
knn$Occupancy <- as.numeric(knn$Occupancy)
knn3 <- select(knn, -1)
head(knn3)
format(knn3)
ggcorrplot(cor(knn3), method = "square")
ggcorrplot(cor(knn3), method = "square")
ggcorrplot(cor(knn3), method = "square", hc.order = TRUE)
ggcorrplot(cor, hc.order = TRUE, type = "lower")
ggcorrplot(cor(knn3), method = "square", hc.order = TRUE)
ggcorrplot(cor, hc.order = TRUE, type = "lower")
ggcorrplot(cor(knn3), method = "square", hc.order = TRUE)
ggcorrplot(cor(knn3), hc.order = TRUE, type = "lower")
ggcorrplot(cor(knn3), hc.order = TRUE, type = "higher")
ggcorrplot(cor(knn3), hc.order = TRUE, type = "lower")
ggcorrplot(cor(knn3), hc.order = TRUE, type = "higher")
ggcorrplot(cor(knn3), hc.order = TRUE, type = "lower")
knn3 <- select(knn, -1) # Selecting the whole dataframe minus the 'date' column
head(knn3) # Checking if the codeline works
format(knn3) # To see if all the needed values are numeric (requirement for plotting the data)
ggcorrplot(cor(knn3), hc.order = TRUE, type = "lower") # Here you can see that there is a big correlation between the amount of light and the occupation of the office.
model1 <- lm(Occupancy~Temperature+Humidity+Light+co2+Humidity_Ratio)
model1 <- lm(Occupancy~Temperature+Humidity+Light+co2+Humidity_Ratio, data=knn3)
model1 <- lm(Occupancy~Temperature+Humidity+Light+CO2+Humidity_Ratio, data=knn3)
summary(model1)
ggpairs(knn3,columns:1:7)
ggpairs(knn3,columns=1:7)
ggpairs(knn3,columns=1:6)
ggpairs(knn3,columns=2:7)
ggpairs(knn3,columns=2:6)
levels(knn3$Occupancy)=0:1
levels(knn3$Occupancy)=0:1
head(knn3$Occupancy)
levels(knn3$Occupancy)=0:1
head(knn3$Occupancy)
table(knn3$Occupancy)
model3 <- glm(Occupation~Temperature+Humidity+Light+CO2+Humidity_Ratio, data=knn3)
model3 <- glm(Occupation~Temperature+Humidity+Light+CO2+Humidity_Ratio, family = niomial, data=knn3)
model3 <- glm(Occupation~Temperature+Humidity+Light+CO2+Humidity_Ratio, family = binomial, data=knn3)
model3 <- glm(Occupatncy~Temperature+Humidity+Light+CO2+Humidity_Ratio, family = binomial, data=knn3)
model3 <- glm(Occupancy~Temperature+Humidity+Light+CO2+Humidity_Ratio, family = binomial, data=knn3)
model3 <- glm(Occupancy~Temperature+Humidity+Light+CO2+Humidity_Ratio, family = binomial, data=knn3)
model3 <- glm(Occupancy~Temperature+Humidity+Light+CO2+Humidity_Ratio, family = binomial, data=knn3)
model3
remove(knn2)
remove(model1)
remove(model2)
remove(model3)
model1 <- glm(Occupancy~Temperature+Humidity+Light+CO2+Humidity_Ratio, family = binomial, data=knn3)
model1
rdf <- as.data.frame(read_html("https://github.com/HAN-M3DM-Data-Mining/data-mining-s1y2223-DannyBannink/blob/master/datasets/KNN-occupancy.csv") %>% html_table(fill=TRUE))
print(rdf) # Look at the results of the gained data
cdf <- rdf[,colSums(is.na(rdf3))<nrow(rdf)] # Removing first column since it doesn't add any value.
print(cdf) # Look at the new table to test if the codeline works.
remove(rdf3)
cdf <- rdf[,colSums(is.na(rdf))<nrow(rdf)] # Removing first column since it doesn't add any value.
print(cdf) # Look at the new table to test if the codeline works.
colnames(cdf)
names(cdf)[1] <- "Date"
names(cdf)[2] <- "Temperature"
names(cdf)[3] <- "Humidity"
names(cdf)[4] <- "Light"
names(cdf)[5] <- "CO2"
names(cdf)[6] <- "Humidity_Ratio"
names(cdf)[7] <- "Occupancy"
head(cdf)
nrow(knn[knn$Light == 0 & knn$Occupancy == 0,]) ## Total count when there is 0 Occupancy compared to 'Light' (5160)
knn %>% count(Light) ## Amount of total '0 values' in column 'Light' (5160)
knn$Temperature <- as.numeric(knn$Temperature)
knn$Humidity <- as.numeric(knn$Humidity)
knn$Light <- as.numeric(knn$Light)
knn$CO2 <- as.numeric(knn$CO2)
knn$Humidity_Ratio <- as.numeric(knn$Humidity_Ratio)
knn$Occupancy <- as.numeric(knn$Occupancy)
knn3 <- select(knn, -1) # Selecting the whole dataframe minus the 'date' column
head(knn3) # Checking if the codeline works
format(knn3) # To see if all the needed values are numeric (requirement for plotting the data)
knn <- select(knn, -1) # Selecting the whole dataframe minus the 'date' column
head(knn3) # Checking if the codeline works
format(knn3) # To see if all the needed values are numeric (requirement for plotting the data)
knn <- select(knn, -1) # Selecting the whole dataframe minus the 'date' column
head(knn) # Checking if the codeline works
format(knn) # To see if all the needed values are numeric (requirement for plotting the data)
cdf <- rdf[,colSums(is.na(rdf))<nrow(rdf)] # Removing first column since it doesn't add any value.
print(cdf) # Look at the new table to test if the codeline works.
cdf <- rdf[,colSums(is.na(rdf))<nrow(rdf)] # Removing first column since it doesn't add any value.
print(cdf) # Look at the new table to test if the codeline works.
colnames(cdf)
names(cdf)[1] <- "Date"
names(cdf)[2] <- "Temperature"
names(cdf)[3] <- "Humidity"
names(cdf)[4] <- "Light"
names(cdf)[5] <- "CO2"
names(cdf)[6] <- "Humidity_Ratio"
names(cdf)[7] <- "Occupancy"
head(cdf)
colnames(rdf)
names(cdf)[1] <- "Date"
names(cdf)[2] <- "Temperature"
names(cdf)[3] <- "Humidity"
names(cdf)[4] <- "Light"
names(cdf)[5] <- "CO2"
names(cdf)[6] <- "Humidity_Ratio"
names(cdf)[7] <- "Occupancy"
head(cdf)
colnames(cdf)
names(cdf)[1] <- "Date"
names(cdf)[2] <- "Temperature"
names(cdf)[3] <- "Humidity"
names(cdf)[4] <- "Light"
names(cdf)[5] <- "CO2"
names(cdf)[6] <- "Humidity_Ratio"
names(cdf)[7] <- "Occupancy"
head(cdf)
knn <- cdf[-1,]
head(knn)
nrow(knn[knn$Light == 0 & knn$Occupancy == 0,]) ## Total count when there is 0 Occupancy compared to 'Light' (5160)
knn %>% count(Light) ## Amount of total '0 values' in column 'Light' (5160)
knn$Temperature <- as.numeric(knn$Temperature)
knn$Humidity <- as.numeric(knn$Humidity)
knn$Light <- as.numeric(knn$Light)
knn$CO2 <- as.numeric(knn$CO2)
knn$Humidity_Ratio <- as.numeric(knn$Humidity_Ratio)
knn$Occupancy <- as.numeric(knn$Occupancy)
knn3 <- select(knn, -1) # Selecting the whole dataframe minus the 'date' column
head(knn3) # Checking if the codeline works
format(knn3) # To see if all the needed values are numeric (requirement for plotting the data)
ggcorrplot(cor(knn3), hc.order = TRUE, type = "lower") # Here you can see that there is a big correlation between the amount of light and the occupation of the office.
levels(knn3$Occupancy)=0:1
head(knn3$Occupancy)
table(knn3$Occupancy)
model1 <- glm(Occupancy~Temperature+Humidity+Light+CO2+Humidity_Ratio, family = binomial, data=knn3)
model1
remove(knn1)
model1 <- glm(Occupancy~Temperature+Humidity+Light+CO2+Humidity_Ratio, data=knn3)
model1
model1 <- glm(Occupancy~Temperature+Humidity+Light+CO2+Humidity_Ratio, family = binomial, data=knn3)
model1
summary(knn3[c("Temperature", "Humidity", "Light", "CO2", "Humidity_Ratio")])
knn$Temperature <- as.numeric(knn$Temperature)
knn$Humidity <- as.numeric(knn$Humidity)
knn$Light <- as.numeric(knn$Light)
knn$CO2 <- as.numeric(knn$CO2)
knn$Humidity_Ratio <- as.numeric(knn$Humidity_Ratio)
knn$Occupancy <- as.numeric(knn$Occupancy)
knn3 <- select(knn, -1) # Selecting the whole dataframe minus the 'date' column
head(knn3) # Checking if the codeline works
format(knn3) # To see if all the needed values are numeric (requirement for plotting the data)
ggcorrplot(cor(knn3), hc.order = TRUE, type = "lower") # Here you can see that there is a big correlation between the amount of light and the occupation of the office.
levels(knn3$Occupancy)=0:1
head(knn3$Occupancy)
table(knn3$Occupancy)
normalize <- function(x) { # Function takes in a vector
return ((x - min(x)) / (max(x) - min(x))) # distance of item value - minimum vector value divided by the range of all vector values
}
testSet1 <- c(1:5)
testSet2 <- c(1:5) * 10
cat("testSet1:", testSet1, "\n")
View(normalize)
View(knn3)
knn3$Occupancy <- factor(knn3$Occupancy, levels = c("0", "1"), labels = c("Empty", "Occupied")) %>% relevel("Occupied")
head(knn3, 10)
View(knn3)
cat("testSet2:", testSet2, "\n")
cat("Normalized testSet1:", normalize(testSet1), "\n")
cat("Normalized testSet2:", normalize(testSet2))
ggcorrplot(cor(knn3), hc.order = TRUE, type = "lower") # Here you can see that there is a big correlation between the amount of light and the occupation of the office.
nrow(knn[knn$Light == 0 & knn$Occupancy == 0,]) ## Total count when there is 0 Occupancy compared to 'Light' (5160)
knn %>% count(Light) ## Amount of total '0 values' in column 'Light' (5160)
format(knn3)
knn4 <- knn3$Occupancy <- factor(knn3$Occupancy, levels = c("0", "1"), labels = c("Empty", "Occupied")) %>% relevel("Occupied")
head(knn3, 10)
knn$Temperature <- as.numeric(knn$Temperature)
knn$Humidity <- as.numeric(knn$Humidity)
knn$Light <- as.numeric(knn$Light)
knn$CO2 <- as.numeric(knn$CO2)
knn$Humidity_Ratio <- as.numeric(knn$Humidity_Ratio)
knn$Occupancy <- as.numeric(knn$Occupancy)
colnames(cdf)
names(cdf)[1] <- "Date"
names(cdf)[2] <- "Temperature"
names(cdf)[3] <- "Humidity"
names(cdf)[4] <- "Light"
names(cdf)[5] <- "CO2"
names(cdf)[6] <- "Humidity_Ratio"
names(cdf)[7] <- "Occupancy"
head(cdf)
knn <- cdf[-1,]
head(knn)
knn$Temperature <- as.numeric(knn$Temperature)
knn$Humidity <- as.numeric(knn$Humidity)
knn$Light <- as.numeric(knn$Light)
knn$CO2 <- as.numeric(knn$CO2)
knn$Humidity_Ratio <- as.numeric(knn$Humidity_Ratio)
knn$Occupancy <- as.numeric(knn$Occupancy)
knn3 <- select(knn, -1) # Selecting the whole dataframe minus the 'date' column
head(knn3) # Checking if the codeline works
format(knn3) # To see if all the needed values are numeric (requirement for plotting the data)
summary(knn3[c("Temperature", "Humidity", "Light", "CO2", "Humidity_Ratio")])
knn4 <- knn3$Occupancy <- factor(knn3$Occupancy, levels = c("0", "1"), labels = c("Empty", "Occupied")) %>% relevel("Occupied")
head(knn3, 10)
normalize <- function(x) { # Function takes in a vector
return ((x - min(x)) / (max(x) - min(x))) # distance of item value - minimum vector value divided by the range of all vector values
}
testSet1 <- c(1:5)
testSet2 <- c(1:5) * 10
cat("testSet1:", testSet1, "\n")
cat("testSet2:", testSet2, "\n")
cat("Normalized testSet1:", normalize(testSet1), "\n")
cat("Normalized testSet2:", normalize(testSet2))
model1 <- glm(Occupancy~Temperature+Humidity+Light+CO2+Humidity_Ratio, family = binomial, data=knn3)
model1
ggcorrplot(cor(knn), hc.order = TRUE, type = "lower") # Here you can see that there is a big correlation between the amount of light and the occupation of the office.
knn4 <- knn3$Occupancy <- factor(knn3$Occupancy, levels = c("0", "1"), labels = c("Empty", "Occupied")) %>% relevel("Occupied")
head(knn3, 10)
knn <- select(knn, -1) # Selecting the whole dataframe minus the 'date' column
head(knn3) # Checking if the codeline works
format(knn3) # To see if all the needed values are numeric (requirement for plotting the data)
knn <- select(knn, -1) # Selecting the whole dataframe minus the 'date' column
head(knn3) # Checking if the codeline works
format(knn3) # To see if all the needed values are numeric (requirement for plotting the data)
ggcorrplot(cor(knn), hc.order = TRUE, type = "lower") # Here you can see that there is a big correlation between the amount of light and the occupation of the office.
knn <- select(knn, -1) # Selecting the whole dataframe minus the 'date' column
head(knn3) # Checking if the codeline works
format(knn3) # To see if all the needed values are numeric (requirement for plotting the data)
knn <- cdf[-1,]
head(knn)
knn$Temperature <- as.numeric(knn$Temperature)
knn$Humidity <- as.numeric(knn$Humidity)
knn$Light <- as.numeric(knn$Light)
knn$CO2 <- as.numeric(knn$CO2)
knn$Humidity_Ratio <- as.numeric(knn$Humidity_Ratio)
knn$Occupancy <- as.numeric(knn$Occupancy)
knn <- select(knn, -6 # Selecting the whole dataframe minus the 'date' column
head(knn3) # Checking if the codeline works
knn <- select(knn, -6)# Selecting the whole dataframe minus the 'date' column
head(knn3) # Checking if the codeline works
format(knn3) # To see if all the needed values are numeric (requirement for plotting the data)
knn <- select(knn, -6)# Selecting the whole dataframe minus the 'date' column
head(knn3) # Checking if the codeline works
format(knn3) # To see if all the needed values are numeric (requirement for plotting the data)
knn <- select(knn, -6)# Selecting the whole dataframe minus the 'date' column
knn <- select(knn, -6)# Selecting the whole dataframe minus the 'date' column
knn <- cdf[-1,]
head(knn)
knn$Temperature <- as.numeric(knn$Temperature)
knn$Humidity <- as.numeric(knn$Humidity)
knn$Light <- as.numeric(knn$Light)
knn$CO2 <- as.numeric(knn$CO2)
knn$Humidity_Ratio <- as.numeric(knn$Humidity_Ratio)
knn$Occupancy <- as.numeric(knn$Occupancy)
knn <- select(knn, -6)# Selecting the whole dataframe minus the 'date' column
head(knn) # Checking if the codeline works
format(knn)# To see if all the needed values are numeric (requirement for plotting the data)
knn <- select(knn, -"occupancy")# Selecting the whole dataframe minus the 'date' column
knn3 <- select(knn, -1) # Selecting the whole dataframe minus the 'date' column
head(knn3) # Checking if the codeline works
format(knn3) # To see if all the needed values are numeric (requirement for plotting the data)
knn$Temperature <- as.numeric(knn$Temperature)
knn$Humidity <- as.numeric(knn$Humidity)
knn$Light <- as.numeric(knn$Light)
knn$CO2 <- as.numeric(knn$CO2)
knn$Humidity_Ratio <- as.numeric(knn$Humidity_Ratio)
knn <- cdf[-1,]
head(knn)
knn$Temperature <- as.numeric(knn$Temperature)
knn$Humidity <- as.numeric(knn$Humidity)
knn$Light <- as.numeric(knn$Light)
knn$CO2 <- as.numeric(knn$CO2)
knn$Humidity_Ratio <- as.numeric(knn$Humidity_Ratio)
knn$Occupancy <- as.numeric(knn$Occupancy)
summary(knn3[c("Temperature", "Humidity", "Light", "CO2", "Humidity_Ratio")])
knn3 <- select(knn, -1) # Selecting the whole dataframe minus the 'date' column
head(knn3) # Checking if the codeline works
format(knn3) # To see if all the needed values are numeric (requirement for plotting the data)
summary(knn3[c("Temperature", "Humidity", "Light", "CO2", "Humidity_Ratio")])
knn4 <- knn3$Occupancy <- factor(knn3$Occupancy, levels = c("0", "1"), labels = c("Empty", "Occupied")) %>% relevel("Occupied")
head(knn3, 10)
cntDiag <- table(knn3$Occupancy)
propDiag <- round(prop.table(cntDiag) * 100 , digits = 1)
cntDiag
propDiag
nCols <- dim(knn3)
knn3_n <- sapply(2:nCols,
function(x) {
normalize(knn3[,x])
}) %>% as.data.frame()
cntDiag <- table(knn3$Occupancy)
propDiag <- round(prop.table(cntDiag) * 100 , digits = 1)
cntDiag
propDiag
knn3<- knn3$Occupancy <- factor(knn3$Occupancy, levels = c("0", "1"), labels = c("Empty", "Occupied")) %>% relevel("Occupied")
head(knn3, 10)
knn3 <- knn3$Occupancy <- factor(knn3$Occupancy, levels = c("0", "1"), labels = c("Empty", "Occupied")) %>% relevel("Occupied")
summary(knn3[c("Temperature", "Humidity", "Light", "CO2", "Humidity_Ratio")])
install.packages("XML")
install.packages("rvest")
install.packages("GGally")
library(tidyverse)
library(XML)
library(rvest)
library(GGally)
install.packages("corrplot")
library("corrplot")
rdf <- as.data.frame(read_html("https://github.com/HAN-M3DM-Data-Mining/data-mining-s1y2223-DannyBannink/blob/master/datasets/KNN-occupancy.csv") %>% html_table(fill=TRUE))
